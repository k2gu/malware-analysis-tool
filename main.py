from __future__ import print_function
from future import standard_library
standard_library.install_aliases()

from urllib.parse import urlparse, urlencode
from urllib.request import urlopen, Request
from urllib.error import HTTPError
import hashlib

print('Hello', 'World')

virusTotalApiKey = 'a20c2d560621eeb0d656d8fa2b2882041ce868db18f4753d3f707ddf82542041'
file_path = 'C:\\Users\\kirkep\\Downloads\\foundations_homework2.pdf'
hash = '7657fcb7d772448a6d8504e4b20168b8'

virusTotalScanFileUrl = 'https://www.virustotal.com/vtapi/v2/file/scan'
virusTotalGetReportUrl = 'https://www.virustotal.com/vtapi/v2/file/report'
virusTotalScanHashUrl = 'https://www.virustotal.com/vtapi/v2/file/rescan'


def compute_md5_hash(file):
    algorithm = hashlib.md5()
    algorithm.new(file)


def virus_total_scan_hash():

    params = dict({
        'apikey' : virusTotalApiKey,
        'resource': hash,
    })
    data = urlencode(params).encode('utf-8')

    request = Request(virusTotalScanHashUrl, data)

    response = urlopen(request)

    print(response.read())


def decide_if_file_upload_is_needed(code):
    if code == 1:
        virus_total_get_report()
    else:
        virus_total_post_file()


def virus_total_post_file():  # gets error as a response TODO make it work!

    file = (file_path, open(file_path, 'rb'))
    params = dict({
        'apikey': virusTotalApiKey,
        'file': file
    })
    data = urlencode(params)
    data = data.encode('utf-8')
    request = Request(virusTotalScanFileUrl, data)

    response = urlopen(request)
    print(response.read())


def virus_total_get_report():

    params = dict({
        'apikey' : virusTotalApiKey,
        'resource': hash,
    })
    data = urlencode(params).encode('utf-8')

    request = Request(virusTotalGetReportUrl, data)

    response = urlopen(request)
    print(response.read())


# def format_report():


virus_total_scan_hash()
virus_total_get_report()
