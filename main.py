from __future__ import print_function
from future import standard_library
standard_library.install_aliases()

from urllib.parse import urlparse, urlencode
from urllib.request import urlopen, Request
from urllib.error import HTTPError
import hashlib
import json

virusTotalApiKey = 'a20c2d560621eeb0d656d8fa2b2882041ce868db18f4753d3f707ddf82542041'
file_path = 'C:\\Users\\kirkep\\Downloads\\foundations_homework2.pdf'
file_hash = '7657fcb7d772448a6d8504e4b20168b8'
clean_file_sha256 = 'e37cc2881c874e8ef6a610f3a4223e7eb07f6243592097a4b2da4260d2de14a3'

virusTotalScanFileUrl = 'https://www.virustotal.com/vtapi/v2/file/scan'
virusTotalGetReportUrl = 'https://www.virustotal.com/vtapi/v2/file/report'
virusTotalScanHashUrl = 'https://www.virustotal.com/vtapi/v2/file/rescan'


# def compute_md5_hash(file):  TODO


def virus_total_scan_hash():

    print('Just a second, scanning to see if uploaded file is already scanned by someone...')
    params = dict({
        'apikey': virusTotalApiKey,
        'resource': file_hash,
    })
    data = urlencode(params).encode('utf-8')

    request = Request(virusTotalScanHashUrl, data)

    response = urlopen(request)
    get_response_code(response)


def decide_if_file_upload_is_needed(code):
    if code == 1:
        virus_total_get_report()
    else:
        virus_total_post_file()


def virus_total_post_file():  # gets error as a response TODO make it work!

    print('Uploading file to Virus Total...')
    file = (file_path, open(file_path, 'rb'))
    params = dict({
        'apikey': virusTotalApiKey,
        'file': file
    })
    data = urlencode(params).encode('utf-8')
    request = Request(virusTotalScanFileUrl, data)

    response = urlopen(request)
    # show that file is clean? or what is the response when the file is not malicious


def virus_total_get_report():

    print('Getting a response...')
    params = dict({
        'apikey': virusTotalApiKey,
        'resource': file_hash,
    })
    data = urlencode(params).encode('utf-8')
    request = Request(virusTotalGetReportUrl, data)
    response = urlopen(request)

    file_is_malicious(parse_response(response))


# def format_report(): TODO


def get_response_code(response):

    response_to_json = parse_response(response)
    decide_if_file_upload_is_needed(response_to_json['response_code'])


def parse_response(response):

    response = response.read().decode('utf-8')
    response_to_json = json.loads(response)
    return response_to_json


def file_is_malicious(parsed_response):
    positive_matches_found = parsed_response['positives']
    if positive_matches_found > 0:
        print('The file scanned is malicious!')
        save_report()
    else:
        print('The file scanned is not malicious.')
        # mis siis teeb? Ka raportis??


# def show_select_file_option_to_user(): TODO


def save_report():  # TODO
    print('Creating a report')

# feedback to the user TODO


virus_total_scan_hash()
